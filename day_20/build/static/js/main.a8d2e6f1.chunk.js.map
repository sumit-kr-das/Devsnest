{"version":3,"sources":["components/Header.jsx","components/Card.jsx","components/Content.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Card","name","calorie","data","setData","index","onClick","newData","filter","el","i","Content","useState","Info","length","map","food","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAgBeA,EAfA,WACX,OACI,qBAAKC,UAAU,QAAf,SACI,sBAAKA,UAAU,SAAf,UACA,8CACA,oBAAIA,UAAU,eAAd,SACI,sG,OCQDC,EAfF,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,KAAKC,EAAgC,EAAhCA,QAAQC,EAAwB,EAAxBA,KAAKC,EAAmB,EAAnBA,QAAQC,EAAW,EAAXA,MACrC,OACI,sBAAKN,UAAU,OAAf,UACI,gCACI,6BAAKE,IACL,wBAASF,UAAU,MAAMO,QAAS,WAC9B,IAAIC,EAAUJ,EAAKK,QAAO,SAACC,EAAGC,GAAJ,OAASA,IAAML,KACzCD,EAAQG,IAFZ,uBAKJ,oDAAuBL,EAAvB,sBC2BGS,EAjCC,WACZ,MAAuBC,mBAAS,CAC5B,CAACX,KAAM,QAASC,QAAQ,MACxB,CAACD,KAAM,SAAUC,QAAQ,MACzB,CAACD,KAAM,OAAQC,QAAQ,OACvB,CAACD,KAAM,SAAUC,QAAQ,OACzB,CAACD,KAAM,aAAcC,QAAQ,MAC7B,CAACD,KAAM,YAAaC,QAAQ,MAC5B,CAACD,KAAM,WAAYC,QAAQ,SAP/B,mBAAOC,EAAP,KAAYC,EAAZ,KASA,SAASS,IACL,OAAmB,IAAhBV,EAAKW,OACG,0CAEA,yCAEf,OACI,sBAAKf,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,+BAEA,sBAAKA,UAAU,UAAf,UAEQI,EAAKY,KAAI,SAACC,EAAMX,GAAP,OACL,cAAC,EAAD,CAAkBJ,KAAMe,EAAKf,KAAMC,QAASc,EAAKd,QAASC,KAAMA,EAAMC,QAASA,EAASC,MAAOA,GAApFA,MAGnB,cAACQ,EAAD,WCfDI,MAVf,WAEE,OACE,sBAAKlB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCESmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a8d2e6f1.chunk.js","sourcesContent":["\r\nconst Header = ()=>{\r\n    return (\r\n        <div className=\"intro\">\r\n            <div className=\"header\">\r\n            <h1>Instructions</h1>\r\n            <ul className=\"instructions\">\r\n                <li>pass value and setter of the state to the component as props\r\n</li>\r\n            </ul>\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Header;","const Card = ({name,calorie,data,setData,index}) => {\r\n    return(\r\n        <div className=\"card\">\r\n            <div>\r\n                <h1>{name}</h1>\r\n                <button  className=\"btn\" onClick={()=>{\r\n                    let newData = data.filter((el,i)=> i !== index)\r\n                    setData(newData);\r\n                }}>Delete</button>\r\n            </div>\r\n            <h3>You have consumed {calorie} cals today.</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import Card from './Card';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst Content = () => {\r\n    const [data,setData] = useState([\r\n        {name: \"Pizza\", calorie:\"56\"},\r\n        {name: \"Burger\", calorie:\"69\"},\r\n        {name: \"Coke\", calorie:\"500\"},\r\n        {name: \"Browne\", calorie:\"180\"},\r\n        {name: \"Fried Rice\", calorie:\"90\"},\r\n        {name: \"Pani Puri\", calorie:\"10\"},\r\n        {name: \"Lassania\", calorie:\"200\"}\r\n    ])\r\n    function Info(){\r\n        if(data.length === 0)\r\n            return <h1>No Entry</h1>\r\n        else\r\n            return <> </>\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"title\">Calorie Read Only</h1>\r\n\r\n            <div className=\"content\">\r\n                {\r\n                    data.map((food, index)=>(\r\n                        <Card key={index} name={food.name} calorie={food.calorie} data={data} setData={setData} index={index} />\r\n                    ))\r\n                }\r\n                <Info />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content","import './App.css';\nimport Header from './components/Header';\nimport Content from './components/Content';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}